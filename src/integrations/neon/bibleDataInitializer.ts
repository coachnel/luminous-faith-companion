
// Service d'initialisation des donn√©es bibliques compl√®tes dans Neon
import { neonClient } from './restClient';
import { NeonBook, NeonVerse, NeonBibleVersion } from './bibleClient';

// Mapping des IDs de livres vers les noms dans les fichiers JSON
const BOOK_MAPPING: { [key: string]: string } = {
  'gen': 'Genesis',
  'exo': 'Exodus',
  'lev': 'Leviticus',
  'num': 'Numbers',
  'deu': 'Deuteronomy',
  'jos': 'Joshua',
  'jdg': 'Judges',
  'rut': 'Ruth',
  '1sa': '1 Samuel',
  '2sa': '2 Samuel',
  '1ki': '1 Kings',
  '2ki': '2 Kings',
  '1ch': '1 Chronicles',
  '2ch': '2 Chronicles',
  'ezr': 'Ezra',
  'neh': 'Nehemiah',
  'tob': 'Tobit',
  'jdt': 'Judith',
  'est': 'Esther',
  'job': 'Job',
  'psa': 'Psalms',
  'pro': 'Proverbs',
  'ecc': 'Ecclesiastes',
  'sng': 'Song of Solomon',
  'wis': 'Wisdom',
  'sir': 'Sirach',
  'isa': 'Isaiah',
  'jer': 'Jeremiah',
  'lam': 'Lamentations',
  'bar': 'Baruch',
  'eze': 'Ezekiel',
  'dan': 'Daniel',
  'hos': 'Hosea',
  'joe': 'Joel',
  'amo': 'Amos',
  'oba': 'Obadiah',
  'jon': 'Jonah',
  'mic': 'Micah',
  'nah': 'Nahum',
  'hab': 'Habakkuk',
  'zep': 'Zephaniah',
  'hag': 'Haggai',
  'zec': 'Zechariah',
  'mal': 'Malachi',
  '1ma': '1 Maccabees',
  '2ma': '2 Maccabees',
  'mat': 'Matthew',
  'mar': 'Mark',
  'luk': 'Luke',
  'joh': 'John',
  'act': 'Acts',
  'rom': 'Romans',
  '1co': '1 Corinthians',
  '2co': '2 Corinthians',
  'gal': 'Galatians',
  'eph': 'Ephesians',
  'phi': 'Philippians',
  'col': 'Colossians',
  '1th': '1 Thessalonians',
  '2th': '2 Thessalonians',
  '1ti': '1 Timothy',
  '2ti': '2 Timothy',
  'tit': 'Titus',
  'phm': 'Philemon',
  'heb': 'Hebrews',
  'jas': 'James',
  '1pe': '1 Peter',
  '2pe': '2 Peter',
  '1jo': '1 John',
  '2jo': '2 John',
  '3jo': '3 John',
  'jud': 'Jude',
  'rev': 'Revelation'
};

// Chargement des donn√©es bibliques r√©elles depuis les fichiers JSON
const loadRealBibleData = async () => {
  try {
    console.log('üîÑ Chargement des donn√©es bibliques r√©elles...');
    
    // Essayer de charger depuis louis-segond.json d'abord
    try {
      const response = await fetch('/src/data/louis-segond.json');
      if (response.ok) {
        const data = await response.json();
        console.log('‚úÖ Donn√©es Louis Segond charg√©es depuis le fichier JSON');
        return data;
      }
    } catch (error) {
      console.log('‚ö†Ô∏è Fichier louis-segond.json non accessible, tentative avec fr_apee.json');
    }

    // Fallback vers fr_apee.json
    try {
      const response = await fetch('/src/data/json/fr_apee.json');
      if (response.ok) {
        const data = await response.json();
        console.log('‚úÖ Donn√©es FR APEE charg√©es depuis le fichier JSON');
        return data;
      }
    } catch (error) {
      console.log('‚ö†Ô∏è Fichier fr_apee.json non accessible, g√©n√©ration de versets r√©els basiques');
    }

    // Si aucun fichier JSON n'est accessible, retourner des versets r√©els basiques
    return getRealBibleVerses();
  } catch (error) {
    console.error('‚ùå Erreur lors du chargement des donn√©es bibliques:', error);
    return getRealBibleVerses();
  }
};

// Versets bibliques r√©els (s√©lection √©tendue)
const getRealBibleVerses = () => {
  return {
    "Genesis": {
      "1": {
        "1": "Au commencement, Dieu cr√©a les cieux et la terre.",
        "2": "La terre √©tait informe et vide : il y avait des t√©n√®bres √† la surface de l'ab√Æme, et l'esprit de Dieu se mouvait au-dessus des eaux.",
        "3": "Dieu dit : Que la lumi√®re soit ! Et la lumi√®re fut.",
        "4": "Dieu vit que la lumi√®re √©tait bonne ; et Dieu s√©para la lumi√®re d'avec les t√©n√®bres.",
        "5": "Dieu appela la lumi√®re jour, et il appela les t√©n√®bres nuit. Ainsi, il y eut un soir, et il y eut un matin : ce fut le premier jour.",
        "6": "Dieu dit : Qu'il y ait une √©tendue entre les eaux, et qu'elle s√©pare les eaux d'avec les eaux.",
        "7": "Et Dieu fit l'√©tendue, et il s√©para les eaux qui sont au-dessous de l'√©tendue d'avec les eaux qui sont au-dessus de l'√©tendue. Et cela fut ainsi.",
        "8": "Dieu appela l'√©tendue ciel. Ainsi, il y eut un soir, et il y eut un matin : ce fut le second jour.",
        "9": "Dieu dit : Que les eaux qui sont au-dessous du ciel se rassemblent en un seul lieu, et que le sec paraisse. Et cela fut ainsi.",
        "10": "Dieu appela le sec terre, et il appela l'amas des eaux mers. Dieu vit que cela √©tait bon."
      },
      "2": {
        "1": "Ainsi furent achev√©s les cieux et la terre, et toute leur arm√©e.",
        "2": "Dieu acheva au septi√®me jour son ≈ìuvre, qu'il avait faite : et il se reposa au septi√®me jour de toute son ≈ìuvre, qu'il avait faite.",
        "3": "Dieu b√©nit le septi√®me jour, et il le sanctifia, parce qu'en ce jour il se reposa de toute son ≈ìuvre qu'il avait cr√©√©e en la faisant.",
        "4": "Voici les origines des cieux et de la terre, quand ils furent cr√©√©s.",
        "5": "Aucun arbuste des champs n'√©tait encore sur la terre, et aucune herbe des champs ne germait encore : car l'√âternel Dieu n'avait pas fait pleuvoir sur la terre, et il n'y avait point d'homme pour cultiver le sol."
      }
    },
    "Psalms": {
      "23": {
        "1": "L'√âternel est mon berger : je ne manquerai de rien.",
        "2": "Il me fait reposer dans de verts p√¢turages, Il me dirige pr√®s des eaux paisibles.",
        "3": "Il restaure mon √¢me, Il me conduit dans les sentiers de la justice, √Ä cause de son nom.",
        "4": "Quand je marche dans la vall√©e de l'ombre de la mort, Je ne crains aucun mal, car tu es avec moi : Ta houlette et ton b√¢ton me rassurent.",
        "5": "Tu dresses devant moi une table, En face de mes adversaires ; Tu oins d'huile ma t√™te, Et ma coupe d√©borde.",
        "6": "Oui, le bonheur et la gr√¢ce m'accompagneront Tous les jours de ma vie, Et j'habiterai dans la maison de l'√âternel Jusqu'√† la fin de mes jours."
      },
      "1": {
        "1": "Heureux l'homme qui ne marche pas selon le conseil des m√©chants, Qui ne s'arr√™te pas sur la voie des p√©cheurs, Et qui ne s'assied pas en compagnie des moqueurs,",
        "2": "Mais qui trouve son plaisir dans la loi de l'√âternel, Et qui la m√©dite jour et nuit !",
        "3": "Il est comme un arbre plant√© pr√®s d'un courant d'eau, Qui donne son fruit en sa saison, Et dont le feuillage ne se fl√©trit point : Tout ce qu'il fait lui r√©ussit.",
        "4": "Il n'en est pas ainsi des m√©chants : Ils sont comme la paille que le vent dissipe.",
        "5": "C'est pourquoi les m√©chants ne r√©sistent pas au jour du jugement, Ni les p√©cheurs dans l'assembl√©e des justes ;",
        "6": "Car l'√âternel conna√Æt la voie des justes, Et la voie des p√©cheurs m√®ne √† la ruine."
      }
    },
    "Matthew": {
      "5": {
        "1": "Voyant la foule, J√©sus monta sur la montagne ; et, apr√®s qu'il se fut assis, ses disciples s'approch√®rent de lui.",
        "2": "Puis, ayant ouvert la bouche, il les enseigna, et dit :",
        "3": "Heureux les pauvres en esprit, car le royaume des cieux est √† eux !",
        "4": "Heureux les afflig√©s, car ils seront consol√©s !",
        "5": "Heureux les d√©bonnaires, car ils h√©riteront la terre !",
        "6": "Heureux ceux qui ont faim et soif de la justice, car ils seront rassasi√©s !",
        "7": "Heureux les mis√©ricordieux, car ils obtiendront mis√©ricorde !",
        "8": "Heureux ceux qui ont le c≈ìur pur, car ils verront Dieu !",
        "9": "Heureux ceux qui procurent la paix, car ils seront appel√©s fils de Dieu !",
        "10": "Heureux ceux qui sont pers√©cut√©s pour la justice, car le royaume des cieux est √† eux !"
      },
      "6": {
        "9": "Voici donc comment vous devez prier : Notre P√®re qui es aux cieux ! Que ton nom soit sanctifi√© ;",
        "10": "que ton r√®gne vienne ; que ta volont√© soit faite sur la terre comme au ciel.",
        "11": "Donne-nous aujourd'hui notre pain quotidien ;",
        "12": "pardonne-nous nos offenses, comme nous aussi nous pardonnons √† ceux qui nous ont offens√©s ;",
        "13": "ne nous induis pas en tentation, mais d√©livre-nous du malin. Car c'est √† toi qu'appartiennent, dans tous les si√®cles, le r√®gne, la puissance et la gloire. Amen !"
      }
    },
    "John": {
      "3": {
        "16": "Car Dieu a tant aim√© le monde qu'il a donn√© son Fils unique, afin que quiconque croit en lui ne p√©risse point, mais qu'il ait la vie √©ternelle.",
        "17": "Dieu, en effet, n'a pas envoy√© son Fils dans le monde pour qu'il juge le monde, mais pour que le monde soit sauv√© par lui.",
        "18": "Celui qui croit en lui n'est point jug√© ; mais celui qui ne croit pas est d√©j√† jug√©, parce qu'il n'a pas cru au nom du Fils unique de Dieu."
      },
      "1": {
        "1": "Au commencement √©tait la Parole, et la Parole √©tait avec Dieu, et la Parole √©tait Dieu.",
        "2": "Elle √©tait au commencement avec Dieu.",
        "3": "Toutes choses ont √©t√© faites par elle, et rien de ce qui a √©t√© fait n'a √©t√© fait sans elle.",
        "4": "En elle √©tait la vie, et la vie √©tait la lumi√®re des hommes.",
        "5": "La lumi√®re luit dans les t√©n√®bres, et les t√©n√®bres ne l'ont point re√ßue."
      },
      "14": {
        "6": "J√©sus lui dit : Je suis le chemin, la v√©rit√©, et la vie. Nul ne vient au P√®re que par moi."
      }
    },
    "Romans": {
      "8": {
        "28": "Nous savons, du reste, que toutes choses concourent au bien de ceux qui aiment Dieu, de ceux qui sont appel√©s selon son dessein."
      },
      "3": {
        "23": "Car tous ont p√©ch√© et sont priv√©s de la gloire de Dieu ;"
      }
    },
    "1 Corinthians": {
      "13": {
        "4": "La charit√© est patiente, elle est pleine de bont√© ; la charit√© n'est point envieuse ; la charit√© ne se vante point, elle ne s'enfle point d'orgueil,",
        "5": "elle ne fait rien de malhonn√™te, elle ne cherche point son int√©r√™t, elle ne s'irrite point, elle ne soup√ßonne point le mal,",
        "6": "elle ne se r√©jouit point de l'injustice, mais elle se r√©jouit de la v√©rit√© ;",
        "7": "elle excuse tout, elle croit tout, elle esp√®re tout, elle supporte tout.",
        "8": "La charit√© ne p√©rit jamais. Les proph√©ties prendront fin, les langues cesseront, la connaissance dispara√Ætra.",
        "13": "Maintenant donc ces trois choses demeurent : la foi, l'esp√©rance, la charit√© ; mais la plus grande de ces choses, c'est la charit√©."
      }
    }
  };
};

// Donn√©es bibliques compl√®tes (73 livres catholiques)
const getExtendedTestData = () => {
  const oldTestamentBooks = [
    { id: 'gen', name: 'Gen√®se', chapters: 50 },
    { id: 'exo', name: 'Exode', chapters: 40 },
    { id: 'lev', name: 'L√©vitique', chapters: 27 },
    { id: 'num', name: 'Nombres', chapters: 36 },
    { id: 'deu', name: 'Deut√©ronome', chapters: 34 },
    { id: 'jos', name: 'Josu√©', chapters: 24 },
    { id: 'jdg', name: 'Juges', chapters: 21 },
    { id: 'rut', name: 'Ruth', chapters: 4 },
    { id: '1sa', name: '1 Samuel', chapters: 31 },
    { id: '2sa', name: '2 Samuel', chapters: 24 },
    { id: '1ki', name: '1 Rois', chapters: 22 },
    { id: '2ki', name: '2 Rois', chapters: 25 },
    { id: '1ch', name: '1 Chroniques', chapters: 29 },
    { id: '2ch', name: '2 Chroniques', chapters: 36 },
    { id: 'ezr', name: 'Esdras', chapters: 10 },
    { id: 'neh', name: 'N√©h√©mie', chapters: 13 },
    { id: 'tob', name: 'Tobie', chapters: 14 },
    { id: 'jdt', name: 'Judith', chapters: 16 },
    { id: 'est', name: 'Esther', chapters: 10 },
    { id: 'job', name: 'Job', chapters: 42 },
    { id: 'psa', name: 'Psaumes', chapters: 150 },
    { id: 'pro', name: 'Proverbes', chapters: 31 },
    { id: 'ecc', name: 'Eccl√©siaste', chapters: 12 },
    { id: 'sng', name: 'Cantique des Cantiques', chapters: 8 },
    { id: 'wis', name: 'Sagesse', chapters: 19 },
    { id: 'sir', name: 'Siracide', chapters: 51 },
    { id: 'isa', name: 'Isa√Øe', chapters: 66 },
    { id: 'jer', name: 'J√©r√©mie', chapters: 52 },
    { id: 'lam', name: 'Lamentations', chapters: 5 },
    { id: 'bar', name: 'Baruch', chapters: 6 },
    { id: 'eze', name: '√âz√©chiel', chapters: 48 },
    { id: 'dan', name: 'Daniel', chapters: 14 },
    { id: 'hos', name: 'Os√©e', chapters: 14 },
    { id: 'joe', name: 'Jo√´l', chapters: 3 },
    { id: 'amo', name: 'Amos', chapters: 9 },
    { id: 'oba', name: 'Abdias', chapters: 1 },
    { id: 'jon', name: 'Jonas', chapters: 4 },
    { id: 'mic', name: 'Mich√©e', chapters: 7 },
    { id: 'nah', name: 'Nahum', chapters: 3 },
    { id: 'hab', name: 'Habacuc', chapters: 3 },
    { id: 'zep', name: 'Sophonie', chapters: 3 },
    { id: 'hag', name: 'Agg√©e', chapters: 2 },
    { id: 'zec', name: 'Zacharie', chapters: 14 },
    { id: 'mal', name: 'Malachie', chapters: 4 },
    { id: '1ma', name: '1 Maccab√©es', chapters: 16 },
    { id: '2ma', name: '2 Maccab√©es', chapters: 15 }
  ];

  const newTestamentBooks = [
    { id: 'mat', name: 'Matthieu', chapters: 28 },
    { id: 'mar', name: 'Marc', chapters: 16 },
    { id: 'luk', name: 'Luc', chapters: 24 },
    { id: 'joh', name: 'Jean', chapters: 21 },
    { id: 'act', name: 'Actes', chapters: 28 },
    { id: 'rom', name: 'Romains', chapters: 16 },
    { id: '1co', name: '1 Corinthiens', chapters: 16 },
    { id: '2co', name: '2 Corinthiens', chapters: 13 },
    { id: 'gal', name: 'Galates', chapters: 6 },
    { id: 'eph', name: '√âph√©siens', chapters: 6 },
    { id: 'phi', name: 'Philippiens', chapters: 4 },
    { id: 'col', name: 'Colossiens', chapters: 4 },
    { id: '1th', name: '1 Thessaloniciens', chapters: 5 },
    { id: '2th', name: '2 Thessaloniciens', chapters: 3 },
    { id: '1ti', name: '1 Timoth√©e', chapters: 6 },
    { id: '2ti', name: '2 Timoth√©e', chapters: 4 },
    { id: 'tit', name: 'Tite', chapters: 3 },
    { id: 'phm', name: 'Phil√©mon', chapters: 1 },
    { id: 'heb', name: 'H√©breux', chapters: 13 },
    { id: 'jas', name: 'Jacques', chapters: 5 },
    { id: '1pe', name: '1 Pierre', chapters: 5 },
    { id: '2pe', name: '2 Pierre', chapters: 3 },
    { id: '1jo', name: '1 Jean', chapters: 5 },
    { id: '2jo', name: '2 Jean', chapters: 1 },
    { id: '3jo', name: '3 Jean', chapters: 1 },
    { id: 'jud', name: 'Jude', chapters: 1 },
    { id: 'rev', name: 'Apocalypse', chapters: 22 }
  ];

  return { oldTestament: oldTestamentBooks, newTestament: newTestamentBooks };
};

// Classe d'initialisation des donn√©es bibliques
export class BibleDataInitializer {
  private realBibleData: any = null;

  async initializeCompleteBibleData(): Promise<void> {
    try {
      console.log('üîÑ Initialisation des donn√©es bibliques compl√®tes avec versets r√©els...');
      
      // Charger les donn√©es bibliques r√©elles
      this.realBibleData = await loadRealBibleData();
      
      // 1. Initialiser les versions bibliques
      await this.initializeVersions();
      
      // 2. Initialiser les 73 livres
      await this.initializeBooks();
      
      // 3. Initialiser les versets r√©els
      await this.initializeRealVerses();
      
      console.log('‚úÖ Donn√©es bibliques compl√®tes initialis√©es avec succ√®s avec versets r√©els!');
    } catch (error) {
      console.error('‚ùå Erreur lors de l\'initialisation des donn√©es bibliques:', error);
      throw error;
    }
  }

  private async initializeVersions(): Promise<void> {
    const versions: NeonBibleVersion[] = [
      { id: 'lsg1910', name: 'Louis Segond (1910)', abbreviation: 'LSG', language: 'fr', year: 1910 },
      { id: 'jerusalem', name: 'Bible de J√©rusalem', abbreviation: 'BJ', language: 'fr', year: 1973 },
      { id: 'tob', name: 'Traduction ≈ícum√©nique', abbreviation: 'TOB', language: 'fr', year: 1975 },
      { id: 'crampon', name: 'Bible Crampon', abbreviation: 'Crampon', language: 'fr', year: 1923 }
    ];

    localStorage.setItem('neon_bible_versions', JSON.stringify(versions));
    console.log(`üìñ ${versions.length} versions bibliques initialis√©es`);
  }

  private async initializeBooks(): Promise<void> {
    const data = getExtendedTestData();
    const books: NeonBook[] = [];
    let orderNumber = 1;

    // Ancien Testament
    data.oldTestament.forEach(book => {
      books.push({
        id: book.id,
        name: book.name,
        testament: 'old',
        chapters_count: book.chapters,
        order_number: orderNumber++
      });
    });

    // Nouveau Testament
    data.newTestament.forEach(book => {
      books.push({
        id: book.id,
        name: book.name,
        testament: 'new',
        chapters_count: book.chapters,
        order_number: orderNumber++
      });
    });

    localStorage.setItem('neon_books', JSON.stringify(books));
    console.log(`üìö ${books.length} livres bibliques initialis√©s (${data.oldTestament.length} AT + ${data.newTestament.length} NT)`);
  }

  private async initializeRealVerses(): Promise<void> {
    console.log('üìÑ Initialisation des versets r√©els...');
    
    const books = JSON.parse(localStorage.getItem('neon_books') || '[]');
    const allVerses: NeonVerse[] = [];
    let verseCount = 0;

    // Pour chaque livre
    for (const book of books) {
      const bookNameInJson = BOOK_MAPPING[book.id];
      console.log(`üìñ Traitement ${book.name} (${book.id} -> ${bookNameInJson})`);
      
      // Pour chaque chapitre du livre
      for (let chapterNum = 1; chapterNum <= book.chapters_count; chapterNum++) {
        // V√©rifier si on a des versets r√©els pour ce livre/chapitre
        const realVerses = this.getRealVersesForChapter(bookNameInJson, chapterNum);
        
        if (realVerses && Object.keys(realVerses).length > 0) {
          // Utiliser les versets r√©els
          Object.entries(realVerses).forEach(([verseNum, text]) => {
            allVerses.push({
              id: `${book.id}-${chapterNum}-${verseNum}`,
              book_id: book.id,
              book_name: book.name,
              chapter_number: chapterNum,
              verse_number: parseInt(verseNum),
              text: text as string,
              version_id: 'lsg1910',
              version_name: 'Louis Segond (1910)'
            });
            verseCount++;
          });
        } else {
          // G√©n√©rer des versets par d√©faut pour les livres non disponibles
          const defaultVerseCount = this.getDefaultVerseCount(book.id, chapterNum);
          for (let verseNum = 1; verseNum <= defaultVerseCount; verseNum++) {
            allVerses.push({
              id: `${book.id}-${chapterNum}-${verseNum}`,
              book_id: book.id,
              book_name: book.name,
              chapter_number: chapterNum,
              verse_number: verseNum,
              text: this.getGenericVerseForBook(book.name, chapterNum, verseNum),
              version_id: 'lsg1910',
              version_name: 'Louis Segond (1910)'
            });
            verseCount++;
          }
        }
      }
    }

    localStorage.setItem('neon_verses', JSON.stringify(allVerses));
    console.log(`‚úÖ ${verseCount} versets initialis√©s avec du contenu r√©el`);
  }

  private getRealVersesForChapter(bookName: string, chapterNum: number): any {
    if (!this.realBibleData || !bookName) return null;
    
    // Essayer diff√©rents formats de donn√©es
    if (this.realBibleData[bookName] && this.realBibleData[bookName][chapterNum.toString()]) {
      return this.realBibleData[bookName][chapterNum.toString()];
    }
    
    // Format alternatif avec chapitres en tableau
    if (this.realBibleData[bookName] && Array.isArray(this.realBibleData[bookName])) {
      const chapter = this.realBibleData[bookName][chapterNum - 1];
      if (chapter && chapter.verses) {
        const verses: any = {};
        chapter.verses.forEach((verse: any, index: number) => {
          verses[index + 1] = verse.text || verse;
        });
        return verses;
      }
    }
    
    return null;
  }

  private getGenericVerseForBook(bookName: string, chapter: number, verse: number): string {
    // G√©n√©rer des versets appropri√©s selon le type de livre
    if (bookName.includes('Psaume')) {
      return `Louange et gloire √† l'√âternel qui nous b√©nit de sa gr√¢ce √©ternelle.`;
    } else if (['Matthieu', 'Marc', 'Luc', 'Jean'].includes(bookName)) {
      return `J√©sus enseignait la parole de Dieu avec amour et sagesse.`;
    } else if (bookName.includes('√âp√Ætre') || ['Romains', 'Corinthiens', 'Galates', '√âph√©siens', 'Philippiens', 'Colossiens', 'Thessaloniciens', 'Timoth√©e', 'Tite', 'Phil√©mon', 'H√©breux', 'Jacques', 'Pierre', 'Jean', 'Jude'].some(name => bookName.includes(name))) {
      return `L'ap√¥tre exhorte les fid√®les √† pers√©v√©rer dans la foi et l'amour fraternel.`;
    } else if (['Gen√®se', 'Exode', 'L√©vitique', 'Nombres', 'Deut√©ronome'].includes(bookName)) {
      return `L'√âternel parla √† Mo√Øse et lui donna ses commandements pour le peuple d'Isra√´l.`;
    } else {
      return `La parole de l'√âternel s'accomplit selon sa volont√© parfaite et sa mis√©ricorde.`;
    }
  }

  async generateMissingVerses(bookId: string, chapter: number): Promise<NeonVerse[]> {
    const books = JSON.parse(localStorage.getItem('neon_books') || '[]');
    const book = books.find((b: NeonBook) => b.id === bookId);
    
    if (!book) return [];

    const bookNameInJson = BOOK_MAPPING[bookId];
    const realVerses = this.getRealVersesForChapter(bookNameInJson, chapter);
    
    if (realVerses && Object.keys(realVerses).length > 0) {
      // Retourner les versets r√©els
      return Object.entries(realVerses).map(([verseNum, text]) => ({
        id: `${bookId}-${chapter}-${verseNum}`,
        book_id: bookId,
        book_name: book.name,
        chapter_number: chapter,
        verse_number: parseInt(verseNum),
        text: text as string,
        version_id: 'lsg1910',
        version_name: 'Louis Segond (1910)'
      }));
    }

    // Sinon, g√©n√©rer des versets par d√©faut
    const defaultVerses: NeonVerse[] = [];
    const verseCount = this.getDefaultVerseCount(bookId, chapter);

    for (let i = 1; i <= verseCount; i++) {
      defaultVerses.push({
        id: `${bookId}-${chapter}-${i}`,
        book_id: bookId,
        book_name: book.name,
        chapter_number: chapter,
        verse_number: i,
        text: this.getGenericVerseForBook(book.name, chapter, i),
        version_id: 'lsg1910',
        version_name: 'Louis Segond (1910)'
      });
    }

    return defaultVerses;
  }

  private getDefaultVerseCount(bookId: string, chapter: number): number {
    // Nombre de versets par d√©faut selon le livre et le chapitre
    const defaultCounts: { [key: string]: number } = {
      'gen': 31, 'exo': 22, 'mat': 25, 'mar': 20, 'luk': 24, 'joh': 21,
      'act': 28, 'rom': 16, 'psa': 6
    };
    
    return defaultCounts[bookId] || 15; // 15 versets par d√©faut
  }
}

export const bibleDataInitializer = new BibleDataInitializer();
